@model List<ForumThreadViewModel>
@using System.Security.Claims


<style>
    body {
        background-color: #f2f2f2;
        background: url('https://img.freepik.com/premium-photo/white-background-with-white-background-black-text-that-says-white_689904-124037.jpg?w=740') no-repeat center center fixed;
        background-size: cover;
        margin: 0; 
        display: flex;
        flex-direction: column;
        color: #000000; 
    }
</style>



<h2 style="text-align: center;">Forum Threads</h2>

<div style="margin-bottom: 40px; text-align: center;">
    <a asp-action="Create" class="btn btn-primary">Create New Thread</a>
</div>

@foreach (var thread in Model)
{
    <div class="forum-thread" style="margin-bottom: 2cm;">
        <h3>@thread.Thread.Title</h3>
        <p>@thread.Thread.Content</p>
        <p>Created at: @thread.Thread.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</p>

        <ul>
            @foreach (var reply in thread.Replies)
            {
                <li>@reply.Content - @reply.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</li>
            }
        </ul>

        <div class="thread-actions">
            @if (User.Identity.IsAuthenticated && User.FindFirstValue(ClaimTypes.NameIdentifier) == thread.Thread.UserId){
            <a asp-action="Delete" class="btn btn-danger" asp-route-id="@thread.Thread.Id">Delete</a>
            <a asp-action="Edit" class="btn btn-primary" asp-route-id="@thread.Thread.Id">Edit</a>
        }
        </div>


        <form asp-action="Reply" asp-controller="ForumControllerMain" method="post" style="margin-top: 10px;">
            <input type="hidden" asp-for="@thread.Thread.Id" name="threadId" />
            <div style="display: flex;">
                <textarea id="replyContent" name="replyContent" rows="1" style="resize: none; width: 600px;" required></textarea>
                <button type="submit" class="btn btn-primary" style="margin-left: 10px;">Reply</button>
            </div>
        </form>
    </div>
    <hr />
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var toggleButtons = document.querySelectorAll('.toggle-replies-btn');

        toggleButtons.forEach(function (btn) {
            btn.addEventListener('click', function () {
                var repliesSection = this.nextElementSibling;
                repliesSection.style.display = (repliesSection.style.display === 'none') ? 'block' : 'none';
            });
        });

        var replyForms = document.querySelectorAll('.reply-form');

        replyForms.forEach(function (form) {
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                var formData = new FormData(form);

                fetch(form.action, {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(data => {
                        var repliesSection = form.nextElementSibling;
                        repliesSection.innerHTML = data;
                        repliesSection.style.display = 'block';
                    });
            });
        });

        var editForms = document.querySelectorAll('.edit-form');

        editForms.forEach(function (form) {
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                var formData = new FormData(form);

                fetch(form.action, {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(data => {
                        location.reload();
                    });
            });
        });
    });
</script>
